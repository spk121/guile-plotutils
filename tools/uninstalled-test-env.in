#!/bin/sh

#   Copyright (C) 2003, 2006, 2008, 2009, 2010, 2016 Free Software Foundation
#
#   This file is part of GUILE, that has been modified for the
#   guile-gi project
#
# This script is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA

# NOTE: If you update this file, please update uninstalled.in as
# well, if appropriate.

# Usage: uninstalled-env [ARGS]

# This script arranges for the environment to support running Guile
# from the build tree.  The following env vars are modified (but not
# clobbered): GUILE_LOAD_PATH, LTDL_LIBRARY_PATH, and PATH.

# Example: uninstalled-env guile -c '(display "hello\n")'
# Example: ../../uninstalled-env ./guile-test-foo


# env (set by configure)
top_srcdir="@abs_top_srcdir@"
top_builddir="@abs_top_builddir@"

[ x"$top_srcdir"   = x -o ! -d "$top_srcdir" -o \
  x"$top_builddir" = x -o ! -d "$top_builddir" ] && {
    echo $0: bad environment
    echo top_srcdir=$top_srcdir
    echo top_builddir=$top_builddir
    exit 1
}

if [ x"$GUILE_LOAD_PATH" = x ]
then
    GUILE_LOAD_PATH="${top_srcdir}/module:${top_srcdir}"
    if test "${top_srcdir}" != "${top_builddir}"; then
        GUILE_LOAD_PATH="$GUILE_LOAD_PATH:${top_builddir}/module:${top_builddir}"
    fi
else
    for d in "/module" ""
    do
        # This hair prevents double inclusion.
        # The ":" prevents prefix aliasing.
        case x"$GUILE_LOAD_PATH" in
            x*${top_srcdir}${d}:*) ;;
            x*${top_srcdir}${d}) ;;
            *) GUILE_LOAD_PATH="${top_srcdir}${d}:$GUILE_LOAD_PATH" ;;
        esac
        case x"$GUILE_LOAD_PATH" in
            x*${top_builddir}${d}:*) ;;
            x*${top_builddir}${d}) ;;
            *) GUILE_LOAD_PATH="${top_builddir}${d}:$GUILE_LOAD_PATH" ;;
        esac
    done
fi
export GUILE_LOAD_PATH

for d in "/src"
do
    # This hair prevents double inclusion.
    # The ":" prevents prefix aliasing.
    case x"$GUILE_LOAD_COMPILED_PATH" in
        x) GUILE_LOAD_COMPILED_PATH="${top_builddir}${d}" ;;
        x*${top_builddir}${d}:*) ;;
        x*${top_builddir}${d}) ;;
        *) GUILE_LOAD_COMPILED_PATH="${top_builddir}${d}:$GUILE_LOAD_COMPILED_PATH" ;;
    esac
done
export GUILE_LOAD_COMPILED_PATH

for d in "/test"
do
    # This hair prevents double inclusion.
    # The ":" prevents prefix aliasing.
    case x"$GI_TYPELIB_PATH" in
        x) GI_TYPELIB_PATH="${top_builddir}${d}" ;;
        x*${top_builddir}${d}:*) ;;
        x*${top_builddir}${d}) ;;
        *) GI_TYPELIB_PATH="${top_builddir}${d}:$GI_TYPELIB_PATH" ;;
    esac
done
export GI_TYPELIB_PATH

# handle LTDL_LIBRARY_PATH (no clobber)
subdirs_with_ltlibs="."       # maintain me
for dir in $subdirs_with_ltlibs ; do
    if test -z "$LTDL_LIBRARY_PATH"; then
        LTDL_LIBRARY_PATH="${top_builddir}/${dir}"
    else
        LTDL_LIBRARY_PATH="${top_builddir}/${dir}:${LTDL_LIBRARY_PATH}"
    fi
    if test -z "$DYLD_LIBRARY_PATH"; then
        DYLD_LIBRARY_PATH="${top_builddir}/${dir}/.libs"
    else
        DYLD_LIBRARY_PATH="${top_builddir}/${dir}/.libs:${DYLD_LIBRARY_PATH}"
    fi
done
export LTDL_LIBRARY_PATH
export DYLD_LIBRARY_PATH


# handle PATH (no clobber)
PATH="${top_srcdir}/tools:${PATH}"
if test "x${top_srcdir}" != "x${top_builddir}"; then
  PATH="${top_builddir}/tools:${PATH}"
fi
export PATH

exec "$@"
0
